{
  "service": {
    "service": "docbase-search",
    "serviceObject": {
      "name": "docbase-search"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs14.x",
      "architecture": "arm64",
      "stage": "dev",
      "region": "ap-northeast-1",
      "memorySize": 256,
      "timeout": 10,
      "logRetentionInDays": 7,
      "apiGateway": {
        "minimumCompressionSize": 128,
        "binaryMediaTypes": [
          "multipart/form-data"
        ]
      },
      "deploymentBucket": "b24814e6-e8b8-48d0-b1d6-2fe41a11ed20",
      "deploymentPrefix": "serverless",
      "versionFunctions": false,
      "lambdaHashingVersion": "20201221",
      "environment": {
        "TZ": "Asia/Tokyo",
        "S3_BUCKET": "b24814e6-e8b8-48d0-b1d6-2fe41a11ed20",
        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
        "SERVERLESS_STAGE": "dev",
        "SERVERLESS_S3_BUCKET": "b24814e6-e8b8-48d0-b1d6-2fe41a11ed20",
        "DOCBASE_DOMAIN": "connehito"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject",
                "s3:ListBucket",
                "s3:PutObject"
              ],
              "Resource": [
                "arn:aws:s3:::b24814e6-e8b8-48d0-b1d6-2fe41a11ed20",
                "arn:aws:s3:::b24814e6-e8b8-48d0-b1d6-2fe41a11ed20/*"
              ]
            }
          ]
        }
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "CollectLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/docbase-search-dev-collect",
              "RetentionInDays": 7
            }
          },
          "IndexLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/docbase-search-dev-index",
              "RetentionInDays": 7
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "docbase-search",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/docbase-search-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/docbase-search-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "docbase-search",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CollectLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "b24814e6-e8b8-48d0-b1d6-2fe41a11ed20",
                "S3Key": "serverless/docbase-search/dev/1633682967069-2021-10-08T08:49:27.069Z/docbase-search.zip"
              },
              "Handler": "src/collect.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "docbase-search-dev-collect",
              "MemorySize": 1024,
              "Timeout": 300,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "TZ": "Asia/Tokyo",
                  "S3_BUCKET": "b24814e6-e8b8-48d0-b1d6-2fe41a11ed20",
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "SERVERLESS_STAGE": "dev",
                  "SERVERLESS_S3_BUCKET": "b24814e6-e8b8-48d0-b1d6-2fe41a11ed20",
                  "DOCBASE_DOMAIN": "connehito"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CollectLogGroup"
            ]
          },
          "IndexLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "b24814e6-e8b8-48d0-b1d6-2fe41a11ed20",
                "S3Key": "serverless/docbase-search/dev/1633682967069-2021-10-08T08:49:27.069Z/docbase-search.zip"
              },
              "Handler": "src/index.handler",
              "Runtime": "nodejs14.x",
              "FunctionName": "docbase-search-dev-index",
              "MemorySize": 256,
              "Timeout": 10,
              "Architectures": [
                "arm64"
              ],
              "Environment": {
                "Variables": {
                  "TZ": "Asia/Tokyo",
                  "S3_BUCKET": "b24814e6-e8b8-48d0-b1d6-2fe41a11ed20",
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
                  "SERVERLESS_STAGE": "dev",
                  "SERVERLESS_S3_BUCKET": "b24814e6-e8b8-48d0-b1d6-2fe41a11ed20",
                  "DOCBASE_DOMAIN": "connehito"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "IndexLogGroup"
            ]
          },
          "CollectEventsRuleSchedule1": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "ScheduleExpression": "cron(0 17 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "CollectLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "collectSchedule"
                }
              ]
            }
          },
          "CollectLambdaPermissionEventsRuleSchedule1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CollectLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::GetAtt": [
                  "CollectEventsRuleSchedule1",
                  "Arn"
                ]
              }
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-docbase-search",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "IndexLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "IndexLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationIndex": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"IndexLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 10500
            }
          },
          "HttpApiRouteGet": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationIndex"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationIndex"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "b24814e6-e8b8-48d0-b1d6-2fe41a11ed20",
            "Export": {
              "Name": "sls-docbase-search-dev-ServerlessDeploymentBucketName"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-docbase-search-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-docbase-search-dev-HttpApiUrl"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "stage": "dev",
      "s3Bucket": "b24814e6-e8b8-48d0-b1d6-2fe41a11ed20",
      "docbaseDomain": "connehito",
      "esbuild": {
        "bundle": true,
        "minify": true
      }
    },
    "plugins": [
      "serverless-esbuild",
      "serverless-dotenv-plugin"
    ],
    "pluginsData": {},
    "functions": {
      "collect": {
        "memorySize": 1024,
        "timeout": 300,
        "handler": "src/collect.handler",
        "events": [
          {
            "schedule": {
              "rate": [
                "cron(0 17 * * ? *)"
              ]
            }
          }
        ],
        "name": "docbase-search-dev-collect",
        "package": {
          "patterns": []
        },
        "memory": 1024,
        "runtime": "nodejs14.x",
        "vpc": {}
      },
      "index": {
        "handler": "src/index.handler",
        "events": [
          {
            "httpApi": "GET /",
            "resolvedMethod": "GET",
            "resolvedPath": "/"
          }
        ],
        "name": "docbase-search-dev-index",
        "package": {
          "patterns": []
        },
        "memory": 256,
        "timeout": 10,
        "runtime": "nodejs14.x",
        "vpc": {}
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/docbase-search/dev/1633682967069-2021-10-08T08:49:27.069Z",
    "artifact": "docbase-search.zip"
  }
}